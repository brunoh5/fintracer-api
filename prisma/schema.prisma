generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentMethod {
  MONEY
  PIX
  CREDIT_CARD
  DEBIT_CARD
  BANK_TRANSFER
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  created_at    DateTime @default(now())
  phone         String?
  avatar_url    String?

  accounts     Account[]
  bills        Bill[]
  goals        Goal[]
  transactions Transaction[]

  @@map("users")
}

enum AccountType {
  CURRENT_ACCOUNT
  INVESTMENT_ACCOUNT
  SAVINGS_ACCOUNT
  MACHINE_ACCOUNT
}

model Account {
  id      String      @id @default(uuid())
  balance Int         @default(0)
  type    AccountType @default(CURRENT_ACCOUNT)
  number  String?
  bank    String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  transactions Transaction[]

  @@map("accounts")
}

enum TransactionType {
  CREDIT
  DEBIT
}

model Transaction {
  id               String          @id @default(uuid())
  name             String
  shopName         String?
  created_at       DateTime        @default(now())
  amount           Int             @default(0)
  transaction_type TransactionType
  payment_method   PaymentMethod

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  accountId String
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

enum Period {
  ONLY
  MONTHLY
  ANUAL
}

model Bill {
  id          String    @id @default(uuid())
  dueDate     DateTime
  imageUrl    String?
  title       String
  description String?
  lastCharge  DateTime?
  amount      Int
  created_at  DateTime  @default(now())
  paid_at     DateTime?

  period Period @default(ONLY)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("bills")
}

model Goal {
  id            String   @id @default(uuid())
  name          String
  targetAmount  Int      @default(0)
  presentAmount Int?     @default(0)
  created_at    DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}

model Category {
  id   String @id @default(uuid())
  name String

  transaction Transaction[]

  @@map("categories")
}
